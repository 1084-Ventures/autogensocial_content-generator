openapi: 3.0.0
info:
  title: autogen_social_api
  version: 1.0.0
  description: |
    API for content orchestration, generation, and posting for social media automation.
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: /api
    description: Azure Functions API endpoint
paths:
  /orchestrate-content:
    post:
      operationId: orchestrateContent
      summary: Orchestrate content generation and posting
      description: Orchestrates the generation of content and optionally posts it to external platforms.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - templateId
                - brandId
              properties:
                templateId:
                  type: string
                  description: The template ID to use for content generation
                brandId:
                  type: string
                  description: The brand ID for which to generate content
                variableValues:
                  type: object
                  description: Variable values for the template
                  additionalProperties:
                    type: string
      responses:
        '201':
          description: Content generated and orchestrated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Post ID
                  content:
                    type: object
                    description: 'Generated content (text, hashtags, etc.)'
                  imageUrl:
                    type: string
                    description: URL of the generated image (if any)
                  instagramResult:
                    type: object
                    description: Instagram API result (if posted)
                  instagramPostId:
                    type: string
                    description: Instagram post ID (if posted)
                  postStatus:
                    type: string
                    description: 'Status of the post (e.g., posted, failed)'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1json/schema'
        '404':
          description: Template or brand not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /generate-image:
    post:
      operationId: generateImage
      summary: Generate an image
      description: 'Generates an image based on provided text and style options, including advanced font management and background image centering.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          description: Image generated successfully
          content:
            image/png:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1json/schema'
  /generate-text-content:
    post:
      operationId: generateTextContent
      summary: Generate text content
      description: Generates text content based on a template and variable values.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - template
              properties:
                template:
                  type: object
                  description: Template object for text generation
                variableValues:
                  type: object
                  description: Variable values for the template
                  additionalProperties:
                    type: string
      responses:
        '200':
          description: Text content generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1json/schema'
  /post-content:
    post:
      operationId: postContent
      summary: Post generated content
      description: Posts generated content (text and image) to an external platform.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - brandId
                - imageUrl
                - content
              properties:
                brandId:
                  type: string
                  description: The brand ID for which to post content.
                imageUrl:
                  type: string
                  description: The URL of the image to post.
                content:
                  type: object
                  description: Content object containing comment and hashtags.
                  properties:
                    comment:
                      type: string
                    hashtags:
                      type: array
                      items:
                        type: string
      responses:
        '201':
          description: Content posted successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1json/schema'
  /external/post-instagram-content:
    post:
      operationId: postInstagramContent
      summary: Post content to Instagram
      description: Posts content (text and image) to Instagram for a given brand.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - brandId
                - imageUrl
                - content
              properties:
                brandId:
                  type: string
                  description: The brand ID for which to post content.
                imageUrl:
                  type: string
                  description: The URL of the image to post.
                content:
                  type: object
                  description: Content object containing comment and hashtags.
                  properties:
                    comment:
                      type: string
                    hashtags:
                      type: array
                      items:
                        type: string
      responses:
        '201':
          description: Content posted successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound/content/application~1json/schema'
components:
  parameters:
    brand_id:
      name: brand_id
      in: query
      required: true
      schema:
        type: string
        format: uuid
      description: brand identifier (uuid)
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: resource identifier (uuid)
    pagination:
      in: query
      name: pagination
      required: false
      schema:
        type: object
        properties:
          limit:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          offset:
            type: integer
            minimum: 0
            default: 0
          sort_by:
            type: string
            enum:
              - created_at
              - updated_at
              - name
            default: created_at
          sort_order:
            type: string
            enum:
              - asc
              - desc
            default: desc
  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
          example:
            code: RESOURCE_NOT_FOUND
            message: The requested resource was not found
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/responses/NotFound/content/application~1json/schema'
          example:
            code: INVALID_INPUT
            message: Invalid request parameters
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/responses/NotFound/content/application~1json/schema'
          example:
            code: UNAUTHORIZED
            message: Valid API key required
    RateLimitExceeded:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/responses/NotFound/content/application~1json/schema'
          example:
            code: RATE_LIMIT_EXCEEDED
            message: Rate limit exceeded
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      description: api key authentication for all endpoints
      name: x-api-key
      in: header
      x-example: your-api-key-here
  schemas:
    BaseModel:
      type: object
      required:
        - id
        - metadata
      properties:
        id:
          type: string
          description: unique identifier for the record
        metadata:
          $ref: '#/components/schemas/Metadata'
    Brand:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - brand_info
          properties:
            brand_info:
              type: object
              required:
                - name
                - user_id
              properties:
                name:
                  type: string
                  description: Name of the brand
                  minLength: 1
                  maxLength: 100
                  example: Acme Corporation
                description:
                  type: string
                  description: Optional description of the brand
                  maxLength: 500
                  example: Leading provider of innovative solutions
                user_id:
                  type: string
                  description: ID of the user who owns this brand
                  format: uuid
                  example: 123e4567-e89b-12d3-a456-426614174000
            socialAccounts:
              type: object
              properties:
                instagram:
                  $ref: '#/components/schemas/Brand/allOf/1/properties/socialAccounts/properties/tiktok'
                facebook:
                  $ref: '#/components/schemas/Brand/allOf/1/properties/socialAccounts/properties/tiktok'
                tiktok:
                  type: object
                  required:
                    - enabled
                    - username
                    - access_token
                  properties:
                    enabled:
                      type: boolean
                      description: whether this social account is enabled
                      example: true
                    username:
                      type: string
                      description: username for the social account
                      example: '@brandaccount'
                    access_token:
                      type: string
                      description: access token
                      format: string
                      example: oauth2_access_token
                    refresh_token:
                      type: string
                      description: refresh token
                      format: string
                      example: oauth2_refresh_token
                    expires_at:
                      type: string
                      format: date-time
                      description: token expiration timestamp
                      example: '2025-04-10t12:00:00z'
    ContentTemplate:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - templateInfo
            - schedule
            - settings
          properties:
            templateInfo:
              type: object
              required:
                - name
                - brandId
                - contentType
                - targetPlatforms
              properties:
                name:
                  type: string
                description:
                  type: string
                brandId:
                  type: string
                contentType:
                  type: string
                  enum:
                    - text
                    - video
                    - multi_image
                    - image
                  description: 'type of content to be generated - text (text-only post), video (video content), multi_image (multiple images), image (single image)'
                targetPlatforms:
                  type: array
                  items:
                    type: string
                    enum:
                      - instagram
                      - facebook
                      - tiktok
                      - twitter
            schedule:
              $ref: '#/components/schemas/Schedule'
            settings:
              type: object
              required:
                - prompt_template
                - visual_style
                - image
              properties:
                prompt_template:
                  type: object
                  required:
                    - system_prompt
                    - user_prompt
                    - model
                  properties:
                    system_prompt:
                      type: string
                      description: system-level instructions for the ai.
                    user_prompt:
                      type: string
                      description: 'the main prompt for content generation. uses {{variable}} syntax.'
                    temperature:
                      type: number
                      minimum: 0
                      maximum: 2
                      default: 1
                    max_tokens:
                      type: integer
                    model:
                      type: string
                    variables:
                      type: array
                      items:
                        type: object
                        required:
                          - name
                          - values
                        properties:
                          name:
                            type: string
                            description: name of the variable
                          values:
                            type: array
                            items:
                              type: string
                            description: possible values for the variable
                          description:
                            type: string
                            description: optional description of the variable
                visual_style:
                  type: object
                  properties:
                    themes:
                      type: array
                      minItems: 1
                      items:
                        $ref: '#/components/schemas/VisualStyle'
                image:
                  $ref: '#/components/schemas/Image'
    MediaDocument:
      type: object
      required:
        - id
        - user_id
        - brand_id
        - blob_url
        - media_type
        - metadata
        - created_at
        - updated_at
      properties:
        id:
          type: string
        user_id:
          type: string
        brand_id:
          type: string
        blob_url:
          type: string
        media_type:
          type: string
          enum:
            - image
            - video
        metadata:
          $ref: '#/components/schemas/MediaMetadata'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    MediaMetadata:
      type: object
      properties:
        file_name:
          type: string
        description:
          type: string
        suggested_name:
          type: string
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              confidence:
                type: number
        categories:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              confidence:
                type: number
        objects:
          type: array
          items:
            type: object
            properties:
              object:
                type: string
              confidence:
                type: number
              rectangle:
                $ref: '#/components/schemas/MediaMetadata/properties/people/items/properties/rectangle'
        caption:
          type: object
          properties:
            text:
              type: string
            confidence:
              type: number
        dense_captions:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
              confidence:
                type: number
              bounding_box:
                $ref: '#/components/schemas/MediaMetadata/properties/people/items/properties/rectangle'
        brands:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              confidence:
                type: number
        people:
          type: array
          items:
            type: object
            properties:
              confidence:
                type: number
              rectangle:
                type: object
                properties:
                  x:
                    type: number
                  'y':
                    type: number
                  w:
                    type: number
                  h:
                    type: number
        ocr_text:
          type: string
        cognitive_data:
          type: object
          additionalProperties: true
    Fonts:
      type: array
      description: Font definitions for use by both backend and frontend
      items:
        type: object
        properties:
          family:
            type: string
          display_name:
            type: string
          styles:
            type: object
            properties:
              regular:
                type: string
              bold:
                type: string
              italic:
                type: string
              bold_italic:
                type: string
    Metadata:
      type: object
      required:
        - created_date
        - updated_date
        - is_active
      properties:
        created_date:
          type: string
          format: date-time
          description: Creation timestamp
        updated_date:
          type: string
          format: date-time
          description: Last update timestamp
        is_active:
          type: boolean
          description: Whether the record is active or soft-deleted
    Schedule:
      type: object
      required:
        - days_of_week
        - time_slots
      properties:
        days_of_week:
          type: array
          items:
            type: string
            enum:
              - monday
              - tuesday
              - wednesday
              - thursday
              - friday
              - saturday
              - sunday
        time_slots:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'
    SocialAccount:
      type: object
      required:
        - enabled
        - username
        - access_token
      properties:
        enabled:
          type: boolean
          description: whether this social account is enabled
        username:
          type: string
          description: username for the social account
        access_token:
          type: string
          description: oauth access token
        refresh_token:
          type: string
          description: oauth refresh token
        expires_at:
          type: string
          format: date-time
          description: token expiration timestamp
    TimeSlot:
      type: object
      required:
        - hour
        - minute
        - timezone
      properties:
        hour:
          type: integer
          minimum: 0
          maximum: 23
          description: Hour in 24-hour format
        minute:
          type: integer
          minimum: 0
          maximum: 59
          description: Minute
        timezone:
          type: string
          description: 'Timezone string (e.g., ''America/New_York'')'
    VisualStyle:
      type: object
      properties:
        font:
          type: object
          required:
            - family
            - size
          properties:
            family:
              type: string
              description: 'Font family for the overlay text (e.g., Arial).'
            size:
              type: string
              description: 'Font size (e.g., "32px").'
            weight:
              type: string
              enum:
                - normal
                - bold
              description: Font weight for the overlay text.
            style:
              type: string
              enum:
                - normal
                - italic
              description: Font style for the overlay text.
        color:
          type: object
          required:
            - text
            - background
          properties:
            text:
              type: string
              description: 'Color for the overlay text (e.g., "#000000").'
            background:
              type: string
              description: 'Background color for the overlay area (e.g., "#FFFFFF").'
            box:
              type: string
              description: 'Color of the text box background (e.g., "#000000").'
            outline:
              type: string
              description: Color for text outline (if supported).
        outline:
          type: object
          properties:
            color:
              type: string
              description: Color for text outline (if supported).
            width:
              type: integer
              description: Width of the text outline in pixels (if supported).
        alignment:
          type: object
          properties:
            text_align:
              type: string
              enum:
                - left
                - center
                - right
              description: Text alignment for overlay text.
        box:
          type: object
          properties:
            color:
              type: string
              description: 'Color of the text box background (e.g., "#000000").'
            alpha:
              type: integer
              minimum: 0
              maximum: 255
              description: 'Alpha transparency for the text box background (0=transparent, 255=opaque).'
    Image:
      type: object
      description: Settings specific to single image content
      properties:
        container:
          type: object
          description: layout and sizing for the image container
          properties:
            width:
              type: integer
              description: width of the image in pixels
            height:
              type: integer
              description: height of the image in pixels
            aspect_ratio:
              type: string
              enum:
                - square
                - portrait
                - landscape
              description: aspect ratio for the image
            padding:
              type: integer
              description: padding around the content in pixels
        background:
          type: string
          description: url or local path to a background image
        format:
          type: object
          properties:
            min_resolution:
              type: object
              properties:
                width:
                  type: integer
                height:
                  type: integer
            max_file_size:
              type: integer
            image_format:
              type: string
              enum:
                - png
                - jpeg
        overlay:
          type: object
          properties:
            text:
              type: object
              properties:
                allowed:
                  type: boolean
                max_length:
                  type: integer
            position:
              type: string
              enum:
                - top
                - center
                - bottom
        filters:
          type: array
          items:
            type: string
        alt_text:
          type: boolean
        effects:
          type: array
          items:
            type: string
    MultiImage:
      type: object
      description: Settings specific to multiple image content
      properties:
        images:
          type: object
          required:
            - min
            - max
          properties:
            min:
              type: integer
              minimum: 2
              default: 2
              description: minimum number of images required
            max:
              type: integer
              maximum: 10
              default: 10
              description: maximum number of images allowed
        format:
          type: object
          properties:
            aspect_ratio:
              type: string
              enum:
                - square
                - portrait
                - landscape
              default: square
              description: required aspect ratio for all images
            consistent:
              type: boolean
              default: true
              description: whether all images must have the same dimensions
            max_file_size:
              type: integer
              description: maximum file size per image in bytes
        per_image_text:
          type: boolean
          default: false
          description: whether each image can have its own caption/description
        transitions:
          type: object
          properties:
            type:
              type: string
              enum:
                - slide
                - fade
                - none
              default: slide
              description: type of transition between images
            auto_play:
              type: boolean
              default: false
              description: whether to auto-advance through images
    Text:
      type: object
      description: Settings specific to text-based content
      properties:
        max_length:
          type: integer
          description: maximum length of the text content in characters
        media_attachments:
          type: object
          properties:
            allowed:
              type: boolean
              description: whether media attachments are allowed with this text content
            max_count:
              type: integer
              description: maximum number of media attachments allowed
            types:
              type: array
              items:
                type: string
                enum:
                  - image
                  - gif
                  - video
              description: types of media attachments allowed
        formatting:
          type: object
          properties:
            allow_markdown:
              type: boolean
              description: whether markdown formatting is allowed
            allow_html:
              type: boolean
              description: whether html formatting is allowed
            allow_emoji:
              type: boolean
              default: true
              description: whether emoji are allowed in the text
    Video:
      type: object
      description: Settings specific to video content
      properties:
        duration:
          type: object
          properties:
            min:
              type: integer
              description: minimum duration in seconds
            max:
              type: integer
              description: maximum duration in seconds
        format:
          type: object
          properties:
            aspect_ratio:
              type: string
              enum:
                - square
                - portrait
                - landscape
                - vertical
              default: vertical
              description: video aspect ratio
            resolution:
              type: object
              properties:
                width:
                  type: integer
                  description: video width in pixels
                height:
                  type: integer
                  description: video height in pixels
        audio:
          type: object
          properties:
            required:
              type: boolean
              description: whether audio is required
            background_music:
              type: boolean
              description: whether background music should be included
            voiceover:
              type: boolean
              description: whether voiceover should be included
        captions:
          type: object
          properties:
            required:
              type: boolean
              description: whether captions are required
            style:
              type: string
              enum:
                - subtitle
                - overlay
                - none
              description: Style of captions to use
        visualEffects:
          type: array
          items:
            type: string
          description: List of allowed visual effects
    Facebook:
      type: object
      description: Facebook-specific content settings
      properties:
        post:
          type: object
          description: Settings for Facebook posts
          allOf:
            - $ref: '#/components/schemas/Twitter/properties/tweet/allOf/0'
            - type: object
              properties:
                privacy:
                  type: string
                  enum:
                    - public
                    - friends
                    - custom
                  default: public
                feeling:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    type:
                      type: string
                      enum:
                        - activity
                        - feeling
                        - celebrating
                        - watching
                        - eating
                    value:
                      type: string
                taggedUsers:
                  type: array
                  items:
                    type: string
                crosspost:
                  type: object
                  properties:
                    instagram:
                      type: boolean
                    groups:
                      type: array
                      items:
                        type: string
        reel:
          type: object
          description: Settings for Facebook reels
          allOf:
            - $ref: '#/components/schemas/TikTok/properties/video/allOf/0'
            - type: object
              properties:
                soundtrack:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    source:
                      type: string
                      enum:
                        - original
                        - music_library
                crosspostToIG:
                  type: boolean
                  default: false
                tags:
                  type: array
                  items:
                    type: object
                    properties:
                      userId:
                        type: string
                      timestamp:
                        type: integer
                      description:
                        type: object
                        properties:
                          text:
                            type: string
                          language:
                            type: string
                        description: Description object for the tag
        carousel:
          type: object
          description: Settings for Facebook carousel posts
          allOf:
            - $ref: '#/components/schemas/Twitter/properties/imageSet/allOf/0'
            - type: object
              properties:
                albumName:
                  type: string
                privacy:
                  type: string
                  enum:
                    - public
                    - friends
                    - custom
                description:
                  type: string
                taggedUsers:
                  type: object
                  properties:
                    perPhoto:
                      type: boolean
                      description: Whether to allow different tags per photo
                    users:
                      type: array
                      items:
                        type: string
        story:
          type: object
          description: Settings for Facebook stories
          allOf:
            - $ref: '#/components/schemas/TikTok/properties/story/allOf/0'
            - type: object
              properties:
                privacy:
                  type: string
                  enum:
                    - public
                    - friends
                    - custom
                music:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    songId:
                      type: string
                shareToNews:
                  type: boolean
                  description: Whether to share to News Feed
                allowReshares:
                  type: boolean
                  default: true
    Instagram:
      type: object
      description: Instagram-specific content settings
      properties:
        post:
          type: object
          description: Settings for Instagram posts
          allOf:
            - $ref: '#/components/schemas/Twitter/properties/tweet/allOf/0'
            - type: object
              properties:
                filters:
                  type: array
                  items:
                    type: string
                    enum:
                      - normal
                      - clarendon
                      - gingham
                      - moon
                      - lark
                      - reyes
                location:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    id:
                      type: string
                altText:
                  type: string
                  description: Image accessibility description
                firstComment:
                  type: boolean
                  description: Whether to post hashtags as first comment
        reel:
          type: object
          description: Settings for Instagram reels
          allOf:
            - $ref: '#/components/schemas/TikTok/properties/video/allOf/0'
            - type: object
              properties:
                audio:
                  type: object
                  properties:
                    source:
                      type: string
                      enum:
                        - original
                        - music_library
                        - sound_effects
                    startTime:
                      type: integer
                      description: Start time in seconds for music
                collabs:
                  type: array
                  items:
                    type: string
                  description: Collaborator usernames
                remixable:
                  type: boolean
                  default: true
                shareToFeed:
                  type: boolean
                  default: true
        carousel:
          type: object
          description: Settings for Instagram carousels
          allOf:
            - $ref: '#/components/schemas/Twitter/properties/imageSet/allOf/0'
            - type: object
              properties:
                aspectRatio:
                  type: string
                  enum:
                    - square
                    - portrait
                    - landscape
                    - mixed
                  default: square
                filterConsistency:
                  type: boolean
                  description: Apply same filter to all slides
                altTexts:
                  type: array
                  items:
                    type: string
                  description: Image descriptions for each slide
        story:
          type: object
          description: Settings for Instagram stories
          allOf:
            - $ref: '#/components/schemas/TikTok/properties/story/allOf/0'
            - type: object
              properties:
                stickers:
                  type: array
                  items:
                    type: string
                    enum:
                      - polls
                      - questions
                      - countdown
                      - quiz
                      - music
                      - location
                      - mention
                      - hashtag
                links:
                  type: boolean
                  description: Whether to include swipe-up links (if eligible)
                highlights:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    folder:
                      type: string
    TikTok:
      type: object
      description: TikTok-specific content settings
      properties:
        video:
          type: object
          description: Settings for TikTok videos
          allOf:
            - type: object
              description: Reel content structure
              properties:
                videoUrl:
                  type: string
                caption:
                  type: string
            - type: object
              properties:
                music:
                  type: object
                  properties:
                    source:
                      type: string
                      enum:
                        - original
                        - commercial_music
                        - sounds
                    startTime:
                      type: integer
                    endTime:
                      type: integer
                    volume:
                      type: number
                      minimum: 0
                      maximum: 1
                effects:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      startTime:
                        type: integer
                      duration:
                        type: integer
                duet:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    layout:
                      type: string
                      enum:
                        - left_right
                        - top_bottom
                        - react
                stitch:
                  type: boolean
                  description: Allow other users to stitch this video
                visibility:
                  type: string
                  enum:
                    - public
                    - friends
                    - private
                  default: public
                comments:
                  type: boolean
                  default: true
                downloads:
                  type: boolean
                  default: true
                stickers:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - mention
                          - hashtag
                          - location
                      value:
                        type: string
                      timestamp:
                        type: integer
                      position:
                        type: object
                        properties:
                          x:
                            type: number
                          'y':
                            type: number
        story:
          type: object
          description: Settings for TikTok stories
          allOf:
            - type: object
              description: Story content structure
              properties:
                mediaUrl:
                  type: string
                text:
                  type: string
            - type: object
              properties:
                visibility:
                  type: string
                  enum:
                    - public
                    - friends
                    - private
                music:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    songId:
                      type: string
                effects:
                  type: array
                  items:
                    type: string
                text:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
                      style:
                        type: string
                        enum:
                          - default
                          - handwriting
                          - typewriter
                          - neon
                      color:
                        type: string
                      position:
                        type: object
                        properties:
                          x:
                            type: number
                          'y':
                            type: number
    Twitter:
      type: object
      description: Twitter (X) specific content settings
      properties:
        tweet:
          type: object
          description: Settings for regular tweets
          allOf:
            - type: object
              description: Generic post content structure
              properties:
                text:
                  type: string
                media:
                  type: array
                  items:
                    type: string
            - type: object
              properties:
                threadSettings:
                  type: object
                  properties:
                    isThread:
                      type: boolean
                      default: false
                    numberFormat:
                      type: string
                      enum:
                        - numeric
                        - custom
                      default: numeric
                    separator:
                      type: string
                      default: /
                poll:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    options:
                      type: array
                      items:
                        type: string
                      minItems: 2
                      maxItems: 4
                    duration:
                      type: integer
                      description: Poll duration in minutes
                quoteId:
                  type: string
                  description: ID of tweet being quoted
                replyTo:
                  type: string
                  description: ID of tweet being replied to
        video:
          type: object
          description: Settings for Twitter video posts
          allOf:
            - $ref: '#/components/schemas/TikTok/properties/video/allOf/0'
            - type: object
              properties:
                subtitles:
                  type: boolean
                  description: Whether to include subtitles/captions
                thumbnail:
                  type: object
                  properties:
                    useCustom:
                      type: boolean
                    timeOffset:
                      type: integer
                      description: Time in seconds for thumbnail frame
                visibility:
                  type: string
                  enum:
                    - public
                    - followers
                  default: public
        imageSet:
          type: object
          description: Settings for multiple image tweets
          allOf:
            - type: object
              description: Carousel content structure
              properties:
                images:
                  type: array
                  items:
                    type: string
                caption:
                  type: string
            - type: object
              properties:
                altTexts:
                  type: array
                  items:
                    type: string
                  description: Alt text for each image
                taggedUsers:
                  type: array
                  items:
                    type: object
                    properties:
                      username:
                        type: string
                      imageIndex:
                        type: integer
                      coordinates:
                        type: object
                        properties:
                          x:
                            type: number
                          'y':
                            type: number
        space:
          type: object
          description: Settings for Twitter Spaces
          properties:
            title:
              type: string
              maxLength: 70
            scheduledStart:
              type: string
              format: date-time
            cohosts:
              type: array
              items:
                type: string
              maxItems: 2
            recordingEnabled:
              type: boolean
              default: true
            language:
              type: string
            topics:
              type: array
              items:
                type: string
              maxItems: 3
security:
  - bearerAuth: []
